reference" title="Permalink to this headline">¶</a></h1>
<p>This is the platform-independent base DB implementation class.
This class will not be called directly. Rather, the adapter
class for the specific database will extend and instantiate it.</p>
<p>The how-to material for this has been split over several articles.
This article is intended to be a reference for them.</p>
<div class="admonition important">
<p class="first admonition-title">Important</p>
<p class="last">Not all methods are supported by all database drivers,
some of them may fail (and return FALSE) if the underlying
driver does not support them.</p>
</div>
<dl class="class">
<dt id="CI_DB_driver">
<em class="property">class </em><tt class="descname">CI_DB_driver</tt><a class="headerlink" href="#CI_DB_driver" title="Permalink to this definition">¶</a></dt>
<dd><dl class="method">
<dt id="CI_DB_driver::initialize">
<tt class="descname">initialize</tt><big>(</big><big>)</big><a class="headerlink" href="#CI_DB_driver::initialize" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">TRUE on success, FALSE on failure</td>
</tr>
<tr class="field-even field"><th class="field-name">Return type:</th><td class="field-body">bool</td>
</tr>
</tbody>
</table>
<p>Initialize database settings, establish a connection to
the database.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::db_connect">
<tt class="descname">db_connect</tt><big>(</big><em>$persistent = TRUE</em><big>)</big><a class="headerlink" href="#CI_DB_driver::db_connect" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>$persistent</strong> (<em>bool</em>) &#8211; Whether to establish a persistent connection or a regular one</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">Database connection resource/object or FALSE on failure</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Return type:</th><td class="field-body"><p class="first last">mixed</p>
</td>
</tr>
</tbody>
</table>
<p>Establish a connection with the database.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">The returned value depends on the underlying
driver in use. For example, a <tt class="docutils literal"><span class="pre">mysqli</span></tt> instance
will be returned with the &#8216;mysqli&#8217; driver.</p>
</div>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::db_pconnect">
<tt class="descname">db_pconnect</tt><big>(</big><big>)</big><a class="headerlink" href="#CI_DB_driver::db_pconnect" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">Database connection resource/object or FALSE on failure</td>
</tr>
<tr class="field-even field"><th class="field-name">Return type:</th><td class="field-body">mixed</td>
</tr>
</tbody>
</table>
<p>Establish a persistent connection with the database.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">This method is just an alias for <tt class="docutils literal"><span class="pre">db_connect(TRUE)</span></tt>.</p>
</div>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::reconnect">
<tt class="descname">reconnect</tt><big>(</big><big>)</big><a class="headerlink" href="#CI_DB_driver::reconnect" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">TRUE on success, FALSE on failure</td>
</tr>
<tr class="field-even field"><th class="field-name">Return type:</th><td class="field-body">bool</td>
</tr>
</tbody>
</table>
<p>Keep / reestablish the database connection if no queries
have been sent for a length of time exceeding the
server&#8217;s idle timeout.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::db_select">
<tt class="descname">db_select</tt><big>(</big><span class="optional">[</span><em>$database = ''</em><span class="optional">]</span><big>)</big><a class="headerlink" href="#CI_DB_driver::db_select" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>$database</strong> (<em>string</em>) &#8211; Database name</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">TRUE on success, FALSE on failure</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Return type:</th><td class="field-body"><p class="first last">bool</p>
</td>
</tr>
</tbody>
</table>
<p>Select / switch the current database.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::db_set_charset">
<tt class="descname">db_set_charset</tt><big>(</big><em>$charset</em><big>)</big><a class="headerlink" href="#CI_DB_driver::db_set_charset" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>$charset</strong> (<em>string</em>) &#8211; Character set name</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">TRUE on success, FALSE on failure</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Return type:</th><td class="field-body"><p class="first last">bool</p>
</td>
</tr>
</tbody>
</table>
<p>Set client character set.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::platform">
<tt class="descname">platform</tt><big>(</big><big>)</big><a class="headerlink" href="#CI_DB_driver::platform" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">Platform name</td>
</tr>
<tr class="field-even field"><th class="field-name">Return type:</th><td class="field-body">string</td>
</tr>
</tbody>
</table>
<p>The name of the platform in use (mysql, mssql, etc...).</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::version">
<tt class="descname">version</tt><big>(</big><big>)</big><a class="headerlink" href="#CI_DB_driver::version" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">The version of the database being used</td>
</tr>
<tr class="field-even field"><th class="field-name">Return type:</th><td class="field-body">string</td>
</tr>
</tbody>
</table>
<p>Database version number.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::query">
<tt class="descname">query</tt><big>(</big><em>$sql</em><span class="optional">[</span>, <em>$binds = FALSE</em><span class="optional">[</span>, <em>$return_object = NULL</em><span class="optional">]</span><span class="optional">]</span><big>)</big><a class="headerlink" href="#CI_DB_driver::query" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>$sql</strong> (<em>string</em>) &#8211; The SQL statement to execute</li>
<li><strong>$binds</strong> (<em>array</em>) &#8211; An array of binding data</li>
<li><strong>$return_object</strong> (<em>bool</em>) &#8211; Whether to return a result object or not</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">TRUE for successful &#8220;write-type&#8221; queries, CI_DB_result instance (method chaining) on &#8220;query&#8221; success, FALSE on failure</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Return type:</th><td class="field-body"><p class="first last">mixed</p>
</td>
</tr>
</tbody>
</table>
<p>Execute an SQL query.</p>
<p>Accepts an SQL string as input and returns a result object
upon successful execution of a &#8220;read&#8221; type query.</p>
<p>Returns:</p>
<blockquote>
<div><ul class="simple">
<li>Boolean TRUE upon successful execution of a &#8220;write type&#8221; queries</li>
<li>Boolean FALSE upon failure</li>
<li><tt class="docutils literal"><span class="pre">CI_DB_result</span></tt> object for &#8220;read type&#8221; queries</li>
</ul>
</div></blockquote>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::simple_query">
<tt class="descname">simple_query</tt><big>(</big><em>$sql</em><big>)</big><a class="headerlink" href="#CI_DB_driver::simple_query" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>$sql</strong> (<em>string</em>) &#8211; The SQL statement to execute</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">Whatever the underlying driver&#8217;s &#8220;query&#8221; function returns</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Return type:</th><td class="field-body"><p class="first last">mixed</p>
</td>
</tr>
</tbody>
</table>
<p>A simplified version of the <tt class="docutils literal"><span class="pre">query()</span></tt> method, appropriate
for use when you don&#8217;t need to get a result object or to
just send a query to the database and not care for the result.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::affected_rows">
<tt class="descname">affected_rows</tt><big>(</big><big>)</big><a class="headerlink" href="#CI_DB_driver::affected_rows" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">Number of rows affected</td>
</tr>
<tr class="field-even field"><th class="field-name">Return type:</th><td class="field-body">int</td>
</tr>
</tbody>
</table>
<p>Returns the number of rows <em>changed</em> by the last executed query.</p>
<p>Useful for checking how much rows were created, updated or deleted
during the last executed query.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::trans_strict">
<tt class="descname">trans_strict</tt><big>(</big><span class="optional">[</span><em>$mode = TRUE</em><span class="optional">]</span><big>)</big><a class="headerlink" href="#CI_DB_driver::trans_strict" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>$mode</strong> (<em>bool</em>) &#8211; Strict mode flag</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Return type:</th><td class="field-body"><p class="first last">void</p>
</td>
</tr>
</tbody>
</table>
<p>Enable/disable transaction &#8220;strict&#8221; mode.</p>
<p>When strict mode is enabled, if you are running multiple
groups of transactions and one group fails, all subsequent
groups will be rolled back.</p>
<p>If strict mode is disabled, each group is treated
autonomously, meaning a failure of one group will not
affect any others.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::trans_off">
<tt class="descname">trans_off</tt><big>(</big><big>)</big><a class="headerlink" href="#CI_DB_driver::trans_off" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Return type:</th><td class="field-body">void</td>
</tr>
</tbody>
</table>
<p>Disables transactions at run-time.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::trans_start">
<tt class="descname">trans_start</tt><big>(</big><span class="optional">[</span><em>$test_mode = FALSE</em><span class="optional">]</span><big>)</big><a class="headerlink" href="#CI_DB_driver::trans_start" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>$test_mode</strong> (<em>bool</em>) &#8211; Test mode flag</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">TRUE on success, FALSE on failure</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Return type:</th><td class="field-body"><p class="first last">bool</p>
</td>
</tr>
</tbody>
</table>
<p>Start a transaction.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::trans_complete">
<tt class="descname">trans_complete</tt><big>(</big><big>)</big><a class="headerlink" href="#CI_DB_driver::trans_complete" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">TRUE on success, FALSE on failure</td>
</tr>
<tr class="field-even field"><th class="field-name">Return type:</th><td class="field-body">bool</td>
</tr>
</tbody>
</table>
<p>Complete Transaction.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::trans_status">
<tt class="descname">trans_status</tt><big>(</big><big>)</big><a class="headerlink" href="#CI_DB_driver::trans_status" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">TRUE if the transaction succeeded, FALSE if it failed</td>
</tr>
<tr class="field-even field"><th class="field-name">Return type:</th><td class="field-body">bool</td>
</tr>
</tbody>
</table>
<p>Lets you retrieve the transaction status flag to
determine if it has failed.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::compile_binds">
<tt class="descname">compile_binds</tt><big>(</big><em>$sql</em>, <em>$binds</em><big>)</big><a class="headerlink" href="#CI_DB_driver::compile_binds" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>$sql</strong> (<em>string</em>) &#8211; The SQL statement</li>
<li><strong>$binds</strong> (<em>array</em>) &#8211; An array of binding data</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">The updated SQL statement</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Return type:</th><td class="field-body"><p class="first last">string</p>
</td>
</tr>
</tbody>
</table>
<p>Compiles an SQL query with the bind values passed for it.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::is_write_type">
<tt class="descname">is_write_type</tt><big>(</big><em>$sql</em><big>)</big><a class="headerlink" href="#CI_DB_driver::is_write_type" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>$sql</strong> (<em>string</em>) &#8211; The SQL statement</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">TRUE if the SQL statement is of &#8220;write type&#8221;, FALSE if not</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Return type:</th><td class="field-body"><p class="first last">bool</p>
</td>
</tr>
</tbody>
</table>
<p>Determines if a query is of a &#8220;write&#8221; type (such as
INSERT, UPDATE, DELETE) or &#8220;read&#8221; type (i.e. SELECT).</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::elapsed_time">
<tt class="descname">elapsed_time</tt><big>(</big><span class="optional">[</span><em>$decimals = 6</em><span class="optional">]</span><big>)</big><a class="headerlink" href="#CI_DB_driver::elapsed_time" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>$decimals</strong> (<em>int</em>) &#8211; The number of decimal places</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">The aggregate query elapsed time, in microseconds</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Return type:</th><td class="field-body"><p class="first last">string</p>
</td>
</tr>
</tbody>
</table>
<p>Calculate the aggregate query elapsed time.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::total_queries">
<tt class="descname">total_queries</tt><big>(</big><big>)</big><a class="headerlink" href="#CI_DB_driver::total_queries" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">The total number of queries executed</td>
</tr>
<tr class="field-even field"><th class="field-name">Return type:</th><td class="field-body">int</td>
</tr>
</tbody>
</table>
<p>Returns the total number of queries that have been
executed so far.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::last_query">
<tt class="descname">last_query</tt><big>(</big><big>)</big><a class="headerlink" href="#CI_DB_driver::last_query" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">The last query executed</td>
</tr>
<tr class="field-even field"><th class="field-name">Return type:</th><td class="field-body">string</td>
</tr>
</tbody>
</table>
<p>Returns the last query that was executed.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::escape">
<tt class="descname">escape</tt><big>(</big><em>$str</em><big>)</big><a class="headerlink" href="#CI_DB_driver::escape" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>$str</strong> (<em>mixed</em>) &#8211; The value to escape, or an array of multiple ones</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">The escaped value(s)</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Return type:</th><td class="field-body"><p class="first last">mixed</p>
</td>
</tr>
</tbody>
</table>
<p>Escapes input data based on type, including boolean and
NULLs.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::escape_str">
<tt class="descname">escape_str</tt><big>(</big><em>$str</em><span class="optional">[</span>, <em>$like = FALSE</em><span class="optional">]</span><big>)</big><a class="headerlink" href="#CI_DB_driver::escape_str" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>$str</strong> (<em>mixed</em>) &#8211; A string value or array of multiple ones</li>
<li><strong>$like</strong> (<em>bool</em>) &#8211; Whether or not the string will be used in a LIKE condition</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">The escaped string(s)</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Return type:</th><td class="field-body"><p class="first last">mixed</p>
</td>
</tr>
</tbody>
</table>
<p>Escapes string values.</p>
<div class="admonition warning">
<p class="first admonition-title">Warning</p>
<p class="last">The returned strings do NOT include quotes
around them.</p>
</div>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::escape_like_str">
<tt class="descname">escape_like_str</tt><big>(</big><em>$str</em><big>)</big><a class="headerlink" href="#CI_DB_driver::escape_like_str" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>$str</strong> (<em>mixed</em>) &#8211; A string value or array of multiple ones</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">The escaped string(s)</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Return type:</th><td class="field-body"><p class="first last">mixed</p>
</td>
</tr>
</tbody>
</table>
<p>Escape LIKE strings.</p>
<p>Similar to <tt class="docutils literal"><span class="pre">escape_str()</span></tt>, but will also escape the <tt class="docutils literal"><span class="pre">%</span></tt>
and <tt class="docutils literal"><span class="pre">_</span></tt> wildcard characters, so that they don&#8217;t cause
false-positives in LIKE conditions.</p>
<div class="admonition important">
<p class="first admonition-title">Important</p>
<p class="last">The <tt class="docutils literal"><span class="pre">escape_like_str()</span></tt> method uses &#8216;!&#8217; (exclamation mark)
to escape special characters for <em>LIKE</em> conditions. Because this
method escapes partial strings that you would wrap in quotes
yourself, it cannot automatically add the <tt class="docutils literal"><span class="pre">ESCAPE</span> <span class="pre">'!'</span></tt>
condition for you, and so you&#8217;ll have to manually do that.</p>
</div>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::primary">
<tt class="descname">primary</tt><big>(</big><em>$table</em><big>)</big><a class="headerlink" href="#CI_DB_driver::primary" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>$table</strong> (<em>string</em>) &#8211; Table name</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">The primary key name, FALSE if none</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Return type:</th><td class="field-body"><p class="first last">string</p>
</td>
</tr>
</tbody>
</table>
<p>Retrieves the primary key of a table.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">If the database platform does not support primary
key detection, the first column name may be assumed
as the primary key.</p>
</div>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::count_all">
<tt class="descname">count_all</tt><big>(</big><span class="optional">[</span><em>$table = ''</em><span class="optional">]</span><big>)</big><a class="headerlink" href="#CI_DB_driver::count_all" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>$table</strong> (<em>string</em>) &#8211; Table name</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">Row count for the specified table</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Return type:</th><td class="field-body"><p class="first last">int</p>
</td>
</tr>
</tbody>
</table>
<p>Returns the total number of rows in a table, or 0 if no
table was provided.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::list_tables">
<tt class="descname">list_tables</tt><big>(</big><span class="optional">[</span><em>$constrain_by_prefix = FALSE</em><span class="optional">]</span><big>)</big><a class="headerlink" href="#CI_DB_driver::list_tables" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>$constrain_by_prefix</strong> (<em>bool</em>) &#8211; TRUE to match table names by the configured dbprefix</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">Array of table names or FALSE on failure</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Return type:</th><td class="field-body"><p class="first last">array</p>
</td>
</tr>
</tbody>
</table>
<p>Gets a list of the tables in the current database.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::table_exists">
<tt class="descname">table_exists</tt><big>(</big><em>$table_name</em><big>)</big><a class="headerlink" href="#CI_DB_driver::table_exists" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>$table_name</strong> (<em>string</em>) &#8211; The table name</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">TRUE if that table exists, FALSE if not</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Return type:</th><td class="field-body"><p class="first last">bool</p>
</td>
</tr>
</tbody>
</table>
<p>Determine if a particular table exists.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::list_fields">
<tt class="descname">list_fields</tt><big>(</big><em>$table</em><big>)</big><a class="headerlink" href="#CI_DB_driver::list_fields" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>$table</strong> (<em>string</em>) &#8211; The table name</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">Array of field names or FALSE on failure</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Return type:</th><td class="field-body"><p class="first last">array</p>
</td>
</tr>
</tbody>
</table>
<p>Gets a list of the field names in a table.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::field_exists">
<tt class="descname">field_exists</tt><big>(</big><em>$field_name</em>, <em>$table_name</em><big>)</big><a class="headerlink" href="#CI_DB_driver::field_exists" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>$table_name</strong> (<em>string</em>) &#8211; The table name</li>
<li><strong>$field_name</strong> (<em>string</em>) &#8211; The field name</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">TRUE if that field exists in that table, FALSE if not</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Return type:</th><td class="field-body"><p class="first last">bool</p>
</td>
</tr>
</tbody>
</table>
<p>Determine if a particular field exists.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::field_data">
<tt class="descname">field_data</tt><big>(</big><em>$table</em><big>)</big><a class="headerlink" href="#CI_DB_driver::field_data" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>$table</strong> (<em>string</em>) &#8211; The table name</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">Array of field data items or FALSE on failure</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Return type:</th><td class="field-body"><p class="first last">array</p>
</td>
</tr>
</tbody>
</table>
<p>Gets a list containing field data about a table.</p>
</dd></dl>

<dl class="method">
<dt id="CI_DB_driver::escape_identifiers">
<tt class="descname">escape_identifiers</tt><big>(</big><em>$item</em><big>)</big><a class="headerlink" href="#CI_DB_driver::escape_identifiers" title="Permalink to this definition">¶</a></dt>
<dd><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>$item</strong> (<em>mixed</em>) &#8211; The item or array of items to escape</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">The input item(s), escaped</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Return type:</th