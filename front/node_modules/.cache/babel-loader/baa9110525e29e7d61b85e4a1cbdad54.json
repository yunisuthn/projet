{"ast":null,"code":"import _classCallCheck from \"/home/yunisu/Documents/simplon/project (copie)/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/yunisu/Documents/simplon/project (copie)/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/yunisu/Documents/simplon/project (copie)/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/yunisu/Documents/simplon/project (copie)/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/yunisu/Documents/simplon/project (copie)/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/yunisu/Documents/simplon/project (copie)/front/src/pages/List.jsx\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { Link } from 'react-router-dom';\nimport Editer from './Editer';\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  // Initialize the state\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n\n    _this.getList = function () {\n      fetch('http://localhost:3000/list').then(function (res) {\n        return res.text();\n      }).then(function (list) {\n        return _this.setState({\n          list: list\n        });\n      });\n    };\n\n    _this.lister = function () {\n      var test = _this.state.list;\n      console.log(JSON.parse(test));\n      var test1 = JSON.parse(test);\n      console.log(test1.length);\n      var element = [];\n\n      for (var i = 0; i < test1.length; i++) {\n        element[i] = React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, test1[i].nom), \"\\xA0\\xA0\", React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, test1[i].prenom), \"\\xA0\\xA0\", React.createElement(Link, {\n          component: Editer,\n          className: \"btn btn-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Edit\")));\n      }\n\n      ReactDOM.render(element, document.getElementById('root'));\n    };\n\n    _this.editer = function () {\n      console.log(\"bjr\");\n      confirmAlert({\n        customUI: function customUI(_ref) {\n          var onClose = _ref.onClose;\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, \"Nom\"), React.createElement(\"input\", {\n            type: \"text\",\n            value: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }), React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, \"Prenom\"), React.createElement(\"input\", {\n            type: \"text\",\n            value: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, \"Enregistrer\"));\n        }\n      });\n    };\n\n    _this.state = {\n      list: ''\n    };\n    return _this;\n  } // Fetch the list on first mount\n\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getList();\n    } // Retrieves the list of items from the Express app\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.lister,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"lister\"), React.createElement(\"p\", {\n        id: \"b\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nexport default List;","map":{"version":3,"sources":["/home/yunisu/Documents/simplon/project (copie)/front/src/pages/List.jsx"],"names":["React","Component","ReactDOM","confirmAlert","Link","Editer","List","props","getList","fetch","then","res","text","list","setState","lister","test","state","console","log","JSON","parse","test1","length","element","i","nom","prenom","render","document","getElementById","editer","customUI","onClose"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { confirmAlert } from 'react-confirm-alert'; \nimport 'react-confirm-alert/src/react-confirm-alert.css'\nimport { Link } from 'react-router-dom';\n\nimport Editer from './Editer';\nclass List extends Component {\n  // Initialize the state\n\n  constructor(props){\n    super(props);\n    this.state = {\n      list: ''\n    }\n  }\n\n  // Fetch the list on first mount\n  componentDidMount() {\n    this.getList();\n  }\n\n  // Retrieves the list of items from the Express app\n  getList = () => {\n    fetch('http://localhost:3000/list')\n    .then(res => res.text())\n    .then(list => this.setState({ list:list }))\n  }\n\n  lister= () =>  {\n\n    var test = this.state.list\n    console.log( JSON.parse(test))\n    var test1 = JSON.parse(test)\n    console.log(test1.length);\n    var element=[]\n    for (let i = 0; i < test1.length; i++) {\n      element[i] = (\n        <center>\n          <div>\n            <label>{test1[i].nom}</label>&nbsp;&nbsp;\n            <label>{test1[i].prenom}</label>&nbsp;&nbsp;\n            {/* <button onClick={this.editer}>edit</button> */}\n            <Link  component={Editer} className=\"btn btn-primary\">Edit</Link>\n          </div>\n        </center>\n      );\n        \n    }\n    ReactDOM.render(element, document.getElementById('root'));\n  }\n    \n  editer = () =>{\n    console.log(\"bjr\");\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <div>\n            <label>Nom</label><input type=\"text\" value=\"\"/><br/>\n            <label>Prenom</label><input type=\"text\" value=\"\"/><br/>\n            <button>Enregistrer</button>\n          </div>\n        )\n      }\n    })  \n  }\n\nrender() {\nreturn (\n<div className=\"App\">\n  <button onClick={this.lister}>lister</button>\n     <p id='b'></p>\n</div>\n);}\n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}